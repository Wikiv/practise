#include <vector>
#include <map>
#include <string>
#include <jsonparser/JsonParser.h>
#include <ubacutils/IFHelper.h>
#include "ubacta/HistoryPrice.h"
#include "ubacta/TAEngine.h"

using namespace std;
using namespace UBACTA;

int main(int argc, char **argv) {

	TAEngine ta;

	string open = "2600.00,2573.05,2580.30,2632.75,2597.95,2595.00,2559.00,2475.40,2511.00,2501.00,2543.70,2546.80,2564.00,2576.00,2561.00,2517.50,2497.50,2488.00,2499.50,2511.00,2516.05,2489.90,2503.40,2510.40,2520.00,2565.00,2573.00,2572.00,2578.00,2603.10,2670.00,2638.00,2690.10,2706.90,2750.00,2745.00,2712.00,2639.00,2587.90,2558.05,2614.90,2609.00,2590.00,2556.00,2559.70,2596.10,2611.40,2553.00,2545.00,2562.95,2542.00,2546.50,2565.00,2551.65,2555.00,2565.00,2550.00,2557.50,2534.30,2535.50,2594.00,2583.35,2643.70,2599.00,2652.70,2725.00,2693.95,2670.00,2650.50,2655.00,2602.80,2548.00,2490.00,2480.90,2490.00,2496.25,2535.00,2548.00,2549.00,2530.05,2510.05,2533.55,2500.00,2500.00,2528.00,2545.00,2530.80,2492.00,2495.00,2472.95,2475.00,2438.05,2390.00,2380.50,2388.90,2365.35,2366.50,2405.30,2380.05,2377.90,2348.00,2365.00,2362.90,2378.00,2360.00,2340.00,2332.20,2319.40,2337.90,2369.00,2383.00,2335.20,2378.45,2384.00,2415.00,2420.00,2419.95,2440.00,2415.00,2421.00,2428.00,2458.35,2453.05,2415.75,2439.00,2410.15,2385.00,2350.20,2370.00,2385.00,2382.50,2362.70,2317.00,2273.00,2288.85,2262.00,2277.00,2273.80,2285.00,2273.00,2301.90,2302.00,2315.50,2358.70,2391.10,2409.00,2387.50,2421.90,2408.10,2400.00,2333.60,2275.00,2280.00,2200.00,2250.00,2266.00,2265.00,2285.00,2307.35,2320.25,2310.25,2262.45,2219.80,2229.70,2237.00,2193.00,2305.00,2336.00,2380.00,2342.10,2341.00,2356.05,2340.00,2362.00,2349.05,2315.00,2334.00,2360.00,2426.00,2442.00,2487.90,2491.00,2478.00,2470.90,2478.30,2505.00,2456.00,2470.80,2470.00,2480.00,2466.00,2433.00,2498.00,2530.00,2453.00,2534.90,2451.00,2419.00,2402.30,2449.00,2480.00,2501.30,2517.00,2529.00,2525.00,2473.90,2478.00,2465.00,2473.40,2515.00,2500.00,2520.55,2565.00,2538.00,2564.20,2565.85,2555.00,2542.30,2544.00,2484.00,2481.00,2530.00,2553.15,2583.00,2640.00,2571.20,2600.00,2651.40,2620.50,2614.00,2617.25,2622.40,2566.00,2540.00,2558.95,2530.00,2545.55,2559.00,2602.60,2663.50,2650.00,2655.00,2565.15,2547.00,2495.85,2475.00,2522.00";

	string close = "2577.75,2603.90,2633.30,2616.25,2595.10,2522.50,2474.35,2509.55,2499.50,2545.75,2540.20,2564.40,2579.15,2561.40,2528.05,2488.60,2505.15,2497.05,2502.05,2506.75,2480.65,2510.75,2509.60,2508.90,2547.15,2573.30,2552.05,2572.10,2604.20,2671.70,2635.60,2703.20,2684.75,2740.90,2733.60,2686.85,2676.15,2578.65,2567.15,2576.75,2574.65,2570.85,2564.05,2537.40,2591.80,2605.60,2547.45,2539.75,2540.30,2549.75,2545.40,2552.00,2551.65,2547.60,2550.35,2551.25,2551.05,2526.80,2532.65,2580.40,2593.70,2588.25,2588.05,2644.60,2711.65,2700.00,2653.95,2633.80,2629.65,2592.60,2598.55,2483.70,2467.75,2473.75,2488.75,2526.75,2530.00,2537.15,2536.55,2531.10,2529.10,2495.35,2495.20,2517.35,2543.45,2533.80,2482.65,2505.75,2471.35,2458.15,2468.80,2397.40,2374.60,2390.55,2351.45,2362.55,2398.35,2391.05,2367.95,2345.55,2353.35,2364.70,2361.90,2365.20,2350.75,2328.40,2319.80,2329.00,2367.65,2384.55,2386.00,2378.45,2375.85,2408.40,2439.75,2416.80,2446.40,2405.05,2425.80,2434.25,2462.70,2455.80,2418.30,2436.85,2416.40,2369.60,2348.95,2381.60,2371.25,2397.60,2362.35,2327.05,2279.20,2278.80,2261.10,2277.65,2279.30,2280.10,2254.50,2295.75,2304.65,2319.75,2331.20,2391.30,2402.70,2398.10,2416.30,2420.05,2421.95,2362.95,2281.40,2268.80,2197.95,2226.60,2269.15,2265.55,2275.55,2315.85,2319.65,2315.90,2264.00,2210.95,2212.85,2210.50,2176.80,2276.65,2318.85,2373.15,2357.55,2354.30,2357.25,2348.30,2365.25,2355.00,2329.90,2327.05,2352.05,2425.85,2446.25,2473.10,2473.80,2473.40,2469.40,2489.50,2520.30,2453.90,2471.25,2462.75,2481.90,2470.80,2432.05,2506.65,2518.15,2526.20,2519.75,2450.35,2424.40,2417.05,2451.25,2489.80,2511.10,2527.75,2535.50,2526.70,2478.10,2478.00,2470.30,2473.40,2512.55,2522.90,2518.30,2566.20,2523.40,2551.15,2570.20,2551.10,2556.95,2529.30,2491.45,2467.70,2526.45,2548.70,2572.65,2636.40,2569.40,2633.55,2650.15,2629.55,2612.50,2631.15,2613.10,2577.25,2555.75,2547.00,2534.85,2556.85,2558.30,2602.60,2659.30,2651.20,2667.65,2645.35,2573.95,2495.85,2463.95,2502.90,2553.10";

	string high = "2602.95,2610.00,2645.00,2646.90,2621.70,2598.25,2559.00,2518.60,2515.00,2549.95,2558.85,2570.10,2583.90,2600.35,2569.00,2537.85,2516.50,2505.00,2519.00,2515.05,2516.80,2519.00,2525.00,2523.00,2550.00,2583.00,2573.00,2589.00,2610.00,2691.40,2684.00,2719.35,2696.80,2749.90,2752.85,2745.00,2729.90,2645.00,2622.00,2639.00,2614.90,2609.00,2590.00,2611.20,2620.45,2615.00,2614.90,2559.95,2564.10,2574.00,2578.50,2568.40,2565.00,2558.90,2565.00,2586.00,2557.10,2572.40,2557.75,2590.00,2619.00,2634.00,2643.70,2649.95,2770.00,2726.00,2717.00,2678.35,2650.60,2660.35,2612.00,2548.00,2503.50,2492.00,2494.95,2530.00,2542.00,2548.00,2549.00,2544.90,2533.55,2535.40,2511.90,2522.80,2547.80,2547.20,2534.95,2518.25,2502.75,2477.00,2475.00,2438.05,2390.00,2398.45,2388.90,2381.60,2423.55,2413.40,2392.45,2382.40,2359.45,2391.25,2378.05,2378.10,2373.00,2347.30,2343.90,2349.00,2372.80,2391.20,2391.95,2387.00,2385.00,2414.50,2445.00,2434.20,2450.00,2440.00,2435.00,2438.20,2466.40,2465.30,2459.00,2448.50,2439.00,2414.00,2386.60,2386.15,2382.90,2407.35,2384.00,2365.00,2327.00,2298.90,2291.70,2291.90,2300.00,2285.00,2289.90,2302.05,2339.00,2329.95,2348.90,2400.00,2412.95,2433.00,2429.90,2440.00,2439.95,2412.05,2333.60,2289.90,2289.00,2243.40,2306.85,2282.00,2279.65,2319.75,2327.00,2343.00,2319.90,2262.45,2228.00,2256.90,2237.00,2285.10,2330.00,2391.00,2380.00,2367.00,2369.40,2359.85,2390.85,2398.00,2363.50,2332.00,2361.80,2430.00,2454.95,2485.00,2487.90,2517.15,2486.95,2505.00,2550.00,2520.85,2488.00,2484.90,2489.00,2484.70,2473.70,2517.00,2525.00,2545.00,2553.50,2534.90,2467.40,2435.40,2457.05,2493.50,2514.60,2540.00,2542.00,2530.00,2530.00,2494.05,2489.95,2484.30,2518.00,2533.95,2525.60,2569.90,2566.00,2564.80,2591.25,2565.85,2560.00,2565.80,2545.90,2488.25,2532.95,2564.90,2579.85,2641.95,2647.00,2645.00,2654.30,2658.00,2639.00,2639.00,2628.55,2622.40,2603.25,2553.35,2558.95,2564.90,2564.70,2610.00,2668.00,2665.00,2677.70,2659.50,2593.20,2547.00,2502.90,2512.50,2562.90";

	string low = "2571.05,2570.00,2580.30,2603.00,2580.50,2506.65,2455.00,2475.40,2490.00,2500.00,2526.60,2543.30,2551.90,2555.10,2521.05,2483.00,2492.10,2481.15,2492.15,2483.50,2472.80,2487.00,2500.90,2486.00,2511.00,2550.10,2547.00,2556.60,2542.10,2602.00,2556.00,2637.10,2655.00,2690.00,2721.90,2672.00,2655.10,2569.10,2535.50,2511.95,2545.80,2557.70,2531.05,2530.00,2548.00,2576.25,2539.15,2532.70,2523.50,2544.00,2527.00,2540.60,2543.00,2536.00,2541.05,2539.00,2533.20,2490.00,2512.60,2529.90,2579.50,2569.85,2570.95,2592.20,2652.70,2684.00,2646.95,2620.00,2608.00,2587.00,2567.60,2480.00,2465.00,2470.00,2455.85,2495.60,2522.25,2527.30,2515.10,2520.35,2510.05,2490.05,2485.00,2487.55,2518.50,2520.00,2480.00,2483.45,2468.60,2450.00,2450.00,2386.55,2356.00,2375.00,2346.00,2352.00,2361.95,2382.25,2365.50,2337.85,2332.50,2350.15,2357.05,2346.50,2347.00,2321.10,2315.25,2317.30,2320.00,2352.00,2363.25,2330.60,2363.05,2384.00,2393.35,2400.65,2406.85,2400.00,2410.55,2404.00,2420.20,2445.75,2412.30,2407.50,2412.25,2366.05,2341.00,2350.20,2360.00,2372.50,2348.85,2301.60,2255.10,2250.00,2255.00,2260.00,2268.30,2243.00,2245.75,2260.00,2291.50,2281.90,2308.05,2335.05,2359.00,2379.70,2360.30,2402.00,2408.10,2347.00,2255.60,2258.10,2171.65,2164.00,2240.00,2243.00,2246.40,2278.00,2305.45,2305.00,2256.75,2201.20,2185.65,2199.60,2115.00,2162.00,2256.25,2301.00,2349.55,2304.20,2295.15,2314.95,2335.00,2340.00,2320.10,2306.90,2332.00,2360.00,2420.00,2436.50,2457.30,2461.55,2455.00,2460.00,2472.15,2434.10,2447.00,2442.05,2459.35,2457.00,2427.00,2413.00,2488.10,2512.50,2440.00,2440.00,2412.20,2404.20,2402.30,2442.00,2475.90,2498.10,2510.00,2500.00,2472.00,2457.00,2463.55,2431.00,2456.40,2496.00,2490.00,2520.55,2510.15,2522.50,2552.00,2526.05,2526.10,2522.80,2480.20,2459.60,2481.00,2505.10,2550.60,2582.00,2562.00,2571.00,2600.00,2620.50,2603.20,2613.00,2605.50,2555.20,2553.20,2518.00,2518.25,2522.00,2516.45,2559.00,2591.80,2641.40,2631.75,2625.30,2514.15,2482.65,2458.40,2465.30,2500.35";

	string volume = "722940,481735,591169,821418,1333925,1967061,4131827,1140154,851637,1001830,728304,535263,426893,637250,660314,748390,787486,1001869,945594,1206659,1385287,981888,589662,1171346,494497,1105683,594253,715591,1100153,1739892,703213,1146982,386822,958463,845035,1174649,1768040,2346172,1962900,1608079,2632399,1372076,1846022,1493801,1882975,1132537,1213198,879592,893873,1022538,1332909,796336,794659,689950,878408,1227647,554420,1040623,614176,1177127,1183406,1662976,1684168,1417204,2403653,1989795,1032765,1178775,1124862,1227956,3089856,4168564,1607855,1166914,1565321,1347542,964844,1167699,707315,765210,627671,1565158,758348,659647,682453,495717,798049,454012,1010778,680960,67582,1371616,1021764,992514,760176,933453,1006063,544041,499320,1457646,868603,2050024,860997,820148,1141679,623046,691302,569982,2641403,861994,826189,1359266,567934,717967,809422,1512485,805052,780429,424917,421580,1852099,854262,802881,620159,356131,935092,1339010,1326614,1599790,953772,1465114,1741297,2373046,1371026,1634704,1106961,483955,807977,1337768,671589,698780,813493,1553330,1117872,747637,737794,654346,625023,701498,531829,1244805,945366,981204,1086284,1239856,794351,792589,764570,439506,662442,653426,829664,915278,768768,1095859,999880,763743,1324142,756483,634076,1008892,830833,765264,818371,811678,959123,1110544,1602035,1168491,975992,1139217,1660441,919398,1068252,2181982,1520700,876176,745897,881575,1195471,699750,1200324,651814,800734,3560752,3202512,1262862,982063,1133827,1277184,924335,2496372,1186089,558346,1076559,682446,623283,442799,910638,579267,799358,756541,810865,555763,878349,750370,519396,615459,766508,669579,774339,971624,552338,674732,1861304,955971,704378,777461,661013,601097,469133,781069,698416,514989,488785,635422,572535,939494,936419,513845,880856,698507,1883293,2136283,2249762,1265632,2560906";


	IFHelper helper;

	vector<string> openArr, highArr, lowArr, closeArr, volumeArr;

	helper.split(open,",",openArr);
	helper.split(high,",",highArr);
	helper.split(low,",",lowArr);
	helper.split(close,",",closeArr);
	helper.split(volume,",",volumeArr);

	multimap<string, string> indicatorMap;

	indicatorMap.insert(make_pair("ICH", "5,7,10"));

	JsonObject jIndicatorObject;
	jIndicatorObject.iObjectType = JsonObject::JsonObject_ARRAY;

	vector<UBACTA::HistoryPrice> v;

	for(int i=0;i<40;i++){
		HistoryPrice h;

		h.setLow(lowArr.at(i));
		h.setOpen(openArr.at(i));
		h.setHigh(highArr.at(i));
		h.setClose(closeArr.at(i));
		h.setVolume(volumeArr.at(i));


		v.push_back(h);
	}

	//ta.process(indicatorMap, v, jIndicatorObject);

	ta.process(indicatorMap, v, jIndicatorObject, 2);

	cout << jIndicatorObject.toString() << endl;

}

